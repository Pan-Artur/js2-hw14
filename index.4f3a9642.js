(()=>{let e=(e,o)=>new Promise(r=>{setTimeout(()=>r(e),o)});function o(){return Math.floor(4e3*Math.random()+1e3)}let r=o(),s=o(),m=o(),i=o(),t=o(),n=e(`promiseA worked during ${r}ms`,r),d=e(`promiseB worked during ${s}ms`,s);Promise.all([n,d,e(`promiseC worked during ${m}ms`,m),e(`promiseD worked during ${i}ms`,i),e(`promiseE worked during ${t}ms`,t)]).then(e=>{console.log(e)})})(),(()=>{let e=e=>new Promise(o=>{let r=Math.floor(4e3*Math.random()+1e3);setTimeout(()=>o({value:e,delay:r}),r)}),o=e("promiseA"),r=e("promiseB");Promise.race([o,r,e("promiseC"),e("promiseD"),e("promiseE")]).then(e=>{console.log(`It turned out to be the fastest promise - ${e.value}, he worked during ${e.delay}ms`)}).catch(e=>{console.error("Error!",e)})})();
//# sourceMappingURL=index.4f3a9642.js.map
